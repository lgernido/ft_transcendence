services:
  db:
    image: postgres:13.4
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    env_file: 
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    container_name: redis
    expose:
      - 6379
    networks:
      - default

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false  # Désactive la sécurité pour simplifier les tests
  #     - bootstrap.memory_lock=true   # Améliore les performances
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # Limite la mémoire Java
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"  # Port REST pour Elasticsearch
  #     - "9300:9300"  # Port interne pour la communication des clusters
  #   networks:
  #     - elk

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.16.1
  #   container_name: logstash
  #   environment:
  #     - ELASTICSEARCH_HOST=http://elasticsearch:9200
  #   volumes:
  #     - ./logstash/pipeline:/usr/share/logstash/pipeline
  #   ports:
  #     - "5044:5044"  # Port pour Beats
  #     - "9600:9600"  # Port API de Logstash
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - elk

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.16.1
  #   container_name: kibana
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"  # Port pour accéder à Kibana
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - elk
    # http://localhost:5601

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/code/backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - default
    env_file:
      - .env
    environment:
      - DJANGO_SUPERUSER_USERNAME=${ADMIN_NAME}
      - DJANGO_SUPERUSER_EMAIL=${ADMIN_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${ADMIN_PASS}
      - DEBUG=1
      - REDIS_URL=redis://redis:6379
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=securepassword

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./ssl:/etc/ssl
    depends_on:
      - backend
    networks:
      - default


volumes:
  postgres_data:


networks:
  default:
    driver: bridge

