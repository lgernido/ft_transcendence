services:
  db:
    # image: postgres:13.4
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    env_file: 
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    container_name: redis
    expose:
      - 6379
    networks:
      - default

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/code/backend
    # ports:
    #   - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
    env_file:
      - .env
    environment:
      # - DJANGO_SUPERUSER_USERNAME=${ADMIN_NAME}
      # - DJANGO_SUPERUSER_EMAIL=${ADMIN_EMAIL}
      # - DJANGO_SUPERUSER_PASSWORD=${ADMIN_PASS}
      - DEBUG=1
      - REDIS_URL=redis://redis:6379

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./ssl:/etc/ssl
    depends_on:
      - backend
    networks:
      - default
    # env_file:
      # .env
      # - DJANGO_SUPERUSER_USERNAME=admin
      # - DJANGO_SUPERUSER_EMAIL=admin@example.com
      # - DJANGO_SUPERUSER_PASSWORD=securepassword

volumes:
  postgres_data:


networks:
  default:
    driver: bridge

