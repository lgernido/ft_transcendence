services:
  db:
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    env_file: 
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    container_name: redis
    expose:
      - 6379
    networks:
      - default

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/backend
      - static_volume:/backend/src/staticfiles
      - static_volume_media:/backend/src/media
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
    env_file:
      - .env
    environment:
      - DEBUG=1
      - REDIS_URL=redis://redis:6379

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static/
      - static_volume_media:/media/
    depends_on:
      - backend
    networks:
      - default

volumes:
  postgres_data:
  static_volume:
  static_volume_media:


networks:
  default:
    driver: bridge

