  # nginx:
  #   container_name: nginx
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - backend
  #   networks:
  #     - default

services:
  db:
    image: postgres:13.4
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=superpongdb
      - POSTGRES_USER=superpong
      - POSTGRES_PASSWORD=gnoprepus
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/code/backend
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - default
    environment:
      - DEBUG=1
      - REDIS_URL=redis://redis:6379
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=securepassword


volumes:
  postgres_data:

networks:
  default:
    driver: bridge

