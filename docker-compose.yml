services:
  db:
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    env_file: 
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    container_name: redis
    expose:
      - 6379
    networks:
      - default

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/code/backend
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
    env_file:
      - .env
    environment:
      - DEBUG=1
      - REDIS_URL=redis://redis:6379

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - default

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
  #   environment:
  #     - ELASTICSEARCH_HEAP_SIZE=1024m
  #     - discovery.type=single-node
  #     - xpack.security.enabled=true
  #     - xpack.security.transport.ssl.enabled=false
  #     - xpack.security.http.ssl.enabled=false
  #     - ELASTIC_PASSWORD=changeme
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   networks:
  #     - elk

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.9.0
  #   environment:
  #     - xpack.monitoring.enabled=false
  #     - xpack.security.enabled=true
  #     - LOGSTASH_USER=logstash_system
  #     - LOGSTASH_PASSWORD=changeme
  #     - ELASTICSEARCH_HOST=http://elasticsearch:9200
  #   volumes:
  #     - ./ELK/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   ports:
  #     - "5044:5044"  # Port logstash
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - elk

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.9.0
  #   environment:
  #     - ELASTICSEARCH_URL=http://elasticsearch:9200
  #     - ELASTICSEARCH_USERNAME=elastic
  #     - ELASTICSEARCH_PASSWORD=changeme
  #     - SERVER_HOST=0.0.0.0
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - elk

volumes:
  postgres_data:
  # elasticsearch_data:
  #   driver: local


networks:
  default:
    driver: bridge
  # elk:
  #   driver: bridge

